[{"F:\\antd_practise\\src\\index.js":"1","F:\\antd_practise\\src\\reportWebVitals.js":"2","F:\\antd_practise\\src\\App.js":"3","F:\\antd_practise\\src\\components\\Modal.js":"4","F:\\antd_practise\\src\\GlobalStyles.js":"5","F:\\antd_practise\\src\\components\\Posts.js":"6","F:\\antd_practise\\src\\components\\Pagination.js":"7","F:\\antd_practise\\src\\Form.js":"8","F:\\antd_practise\\src\\FormSignUp.js":"9","F:\\antd_practise\\src\\useForm.js":"10","F:\\antd_practise\\src\\ValidateInfo.js":"11","F:\\antd_practise\\src\\FormSuccess.js":"12"},{"size":593,"mtime":1608781217298,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":499162500000,"results":"15","hashOfConfig":"14"},{"size":2212,"mtime":1608782205427,"results":"16","hashOfConfig":"14"},{"size":2918,"mtime":1608620683378,"results":"17","hashOfConfig":"14"},{"size":224,"mtime":1608088432091,"results":"18","hashOfConfig":"14"},{"size":360,"mtime":1608692229229,"results":"19","hashOfConfig":"14"},{"size":588,"mtime":1608693216066,"results":"20","hashOfConfig":"14"},{"size":719,"mtime":1608782317147,"results":"21","hashOfConfig":"14"},{"size":2801,"mtime":1608722630232,"results":"22","hashOfConfig":"14"},{"size":786,"mtime":1608782013739,"results":"23","hashOfConfig":"14"},{"size":764,"mtime":1608719144846,"results":"24","hashOfConfig":"14"},{"size":397,"mtime":1608723209183,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1fdha48",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"30"},"F:\\antd_practise\\src\\index.js",[],"F:\\antd_practise\\src\\reportWebVitals.js",[],["54","55"],"F:\\antd_practise\\src\\App.js",["56"],"F:\\antd_practise\\src\\components\\Modal.js",[],"F:\\antd_practise\\src\\GlobalStyles.js",[],"F:\\antd_practise\\src\\components\\Posts.js",[],"F:\\antd_practise\\src\\components\\Pagination.js",["57"],"import React from \"react\";\r\n\r\nconst Pagination = ({ postPerPage, totalPosts, Paginate }) => {\r\n  const pageNumbers = [];\r\n  for (let i = 1; i <= Math.ceil(totalPosts / postPerPage); i++) {\r\n    pageNumbers.push(i);\r\n  }\r\n  return (\r\n    <nav>\r\n      <ul className=\"pagination\">\r\n        {pageNumbers.map((number) => (\r\n          <li key={number} className=\"page-item\">\r\n            <a onClick={() => Paginate(number)} href=\"#\" className=\"page-link\">\r\n              {number}\r\n            </a>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","F:\\antd_practise\\src\\Form.js",[],"F:\\antd_practise\\src\\FormSignUp.js",["58"],"import ErrorList from \"antd/lib/form/ErrorList\";\r\nimport React from \"react\";\r\nimport \"./Form.css\";\r\nimport useForm from \"./useForm\";\r\nimport ValidateInfo from \"./ValidateInfo\";\r\n\r\nconst FormSignUp = ({ submitForm }) => {\r\n  const { handleChange, values, handleSubmit, errors } = useForm(\r\n    submitForm,\r\n    ValidateInfo\r\n  );\r\n  return (\r\n    <div className=\"form-content-right\">\r\n      <form className=\"form\" onSubmit={handleSubmit}>\r\n        <h1>\r\n          Get started with us today! Create your accountt by filling out the\r\n          information below\r\n        </h1>\r\n        <div className=\"form-inputs\">\r\n          <label htmlFor=\"username\" className=\"for-label\">\r\n            User Name\r\n          </label>\r\n          <input\r\n            id=\"username\"\r\n            type=\"text\"\r\n            name=\"username\"\r\n            className=\"form-input\"\r\n            placeholder=\"enter your username\"\r\n            value={values.username}\r\n            onChange={handleChange}\r\n          />\r\n          {errors.username && <p>{errors.username}</p>}\r\n        </div>\r\n        <div className=\"form-inputs\">\r\n          <label htmlFor=\"email\" className=\"for-label\">\r\n            Email\r\n          </label>\r\n          <input\r\n            id=\"email\"\r\n            type=\"email\"\r\n            name=\"email\"\r\n            className=\"form-input\"\r\n            placeholder=\"enter your username\"\r\n            value={values.email}\r\n            onChange={handleChange}\r\n          />\r\n          {errors.email && <p>{errors.email}</p>}\r\n        </div>\r\n        <div className=\"form-inputs\">\r\n          <label htmlFor=\"password\" className=\"for-label\">\r\n            Password\r\n          </label>\r\n          <input\r\n            id=\"password\"\r\n            type=\"password\"\r\n            name=\"password\"\r\n            className=\"form-input\"\r\n            placeholder=\"enter your password\"\r\n            value={values.password}\r\n            onChange={handleChange}\r\n          />\r\n          {errors.password && <p>{errors.password}</p>}\r\n        </div>\r\n        <div className=\"form-inputs\">\r\n          <label htmlFor=\"password2\" className=\"for-label\">\r\n            Password\r\n          </label>\r\n          <input\r\n            id=\"password2\"\r\n            type=\"password\"\r\n            name=\"password2\"\r\n            className=\"form-input\"\r\n            placeholder=\"re eneter your password\"\r\n            value={values.password2}\r\n            onChange={handleChange}\r\n          />\r\n          {errors.password2 && <p>{errors.password2}</p>}\r\n        </div>\r\n        <button type=\"submit\" className=\"form-input-btn\">\r\n          Sign Up\r\n        </button>\r\n        <span className=\"form-input-login\">\r\n          Already have an account? Login <a href=\" #\"> here</a>\r\n        </span>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormSignUp;\r\n","F:\\antd_practise\\src\\useForm.js",["59"],"F:\\antd_practise\\src\\ValidateInfo.js",[],"F:\\antd_practise\\src\\FormSuccess.js",["60"],"import React from \"react\";\r\n\r\nconst FormSuccess = () => {\r\n  return (\r\n    <div className=\"form-content-right\">\r\n      <div className=\"form-success\">we have received your request</div>\r\n      <img\r\n        src=\"https://mhrjanish.pythonanywhere.com/static/image/anish.png\"\r\n        alt=\"success-image\"\r\n        className=\"form-img-2\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormSuccess;\r\n",{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","severity":1,"message":"66","line":33,"column":23,"nodeType":"67","messageId":"68","endLine":33,"endColumn":37},{"ruleId":"69","severity":1,"message":"70","line":13,"column":13,"nodeType":"71","endLine":13,"endColumn":80},{"ruleId":"65","severity":1,"message":"72","line":1,"column":8,"nodeType":"67","messageId":"68","endLine":1,"endColumn":17},{"ruleId":"73","severity":1,"message":"74","line":29,"column":6,"nodeType":"75","endLine":29,"endColumn":14,"suggestions":"76"},{"ruleId":"77","severity":1,"message":"78","line":7,"column":7,"nodeType":"71","endLine":11,"endColumn":9},"no-native-reassign",["79"],"no-negated-in-lhs",["80"],"no-unused-vars","'setPostPerPage' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'ErrorList' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'callback' and 'isSubmitting'. Either include them or remove the dependency array. If 'callback' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["81"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donâ€™t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","no-global-assign","no-unsafe-negation",{"desc":"82","fix":"83"},"Update the dependencies array to be: [callback, errors, isSubmitting]",{"range":"84","text":"85"},[685,693],"[callback, errors, isSubmitting]"]